name: Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: |
        for service in apps/backend/*/; do
          if [ -f "$service/go.mod" ]; then
            cd "$service"
            go mod tidy
            go test ./... -v
            cd - > /dev/null
          fi
        done

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Test frontend apps
      run: |
        for app in apps/frontend/*/; do
          if [ -f "$app/package.json" ]; then
            cd "$app"
            npm ci
            npm run build
            cd - > /dev/null
          fi
        done

  build:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push images
      run: |
        # Build backend services
        for service in apps/backend/*/; do
          if [ -f "$service/main.go" ]; then
            service_name=$(basename "$service")
            docker build -f infra/docker/Dockerfile.backend "$service" \
              -t ghcr.io/${{ github.repository }}/$service_name:latest
            docker push ghcr.io/${{ github.repository }}/$service_name:latest
          fi
        done